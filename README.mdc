<h1>SocialBee AI â€” Python Automation for Multi-Platform Posting</h1>

<p>AI-assisted content scheduling and cross-posting to Instagram, Facebook, WhatsApp (Cloud API), and LinkedIn â€” all from one Python project.</p>

<p>
<img src="https://img.shields.io/github/actions/workflow/status/your-org/socialbee-ai/ci.yml" alt="CI">
<img src="https://img.shields.io/badge/License-MIT-green.svg" alt="License: MIT">
<img src="https://img.shields.io/badge/python-3.10%2B-blue.svg" alt="Python">
<img src="https://img.shields.io/badge/docker-ready-2496ED.svg" alt="Docker">
</p>

<hr>

<h2>What It Does</h2>
<ul>
  <li>AI content generation: Turn briefs or links into platform-specific captions and hashtags</li>
  <li>Planner and scheduler: Queue posts, set time windows, and auto-optimize posting time</li>
  <li>Cross-posting: Publish to Instagram, Facebook Pages, LinkedIn Pages/Profiles, and WhatsApp Business (Cloud API)</li>
  <li>Media pipeline: Image resize, aspect ratio fixes, alt-text generation, and thumbnailing</li>
  <li>Reusables: Templates, UTM tags, link shortener hooks</li>
  <li>Post analytics: Pull basic engagement metrics (where allowed)</li>
  <li>Plugin architecture: Add new networks via a simple <code>Publisher</code> interface</li>
</ul>

<hr>

<h2>Architecture</h2>
<pre>
socialbee-ai/
â”œâ”€ socialbee/
â”‚  â”œâ”€ ai/
â”‚  â”œâ”€ media/
â”‚  â”œâ”€ platforms/
â”‚  â”‚  â”œâ”€ base.py
â”‚  â”‚  â”œâ”€ instagram.py
â”‚  â”‚  â”œâ”€ facebook.py
â”‚  â”‚  â”œâ”€ linkedin.py
â”‚  â”‚  â””â”€ whatsapp.py
â”‚  â”œâ”€ scheduler/
â”‚  â”œâ”€ store/
â”‚  â””â”€ utils/
â”œâ”€ examples/
â”‚  â”œâ”€ content_plan.yaml
â”‚  â””â”€ post.json
â”œâ”€ cli.py
â”œâ”€ server.py
â”œâ”€ .env.example
â””â”€ README.md
</pre>

<hr>

<h2>Requirements</h2>
<ul>
  <li>Python 3.10+</li>
  <li>Virtual environment recommended</li>
  <li>API access for each platform you use</li>
</ul>

<hr>

<h2>Installation</h2>
<pre><code>git clone https://github.com/your-org/socialbee-ai.git
cd socialbee-ai
python -m venv .venv &amp;&amp; source .venv/bin/activate  # Windows: .venv\Scripts\activate
pip install -U pip
pip install -r requirements.txt
</code></pre>

<hr>

<h2>Configuration</h2>
<ol>
  <li>Copy env template</li>
</ol>
<pre><code>cp .env.example .env
</code></pre>
<ol start="2">
  <li>Fill environment variables for AI keys and platform tokens</li>
  <li>Ensure correct API permissions for each platform</li>
</ol>

<hr>

<h2>Quick Start</h2>

<h3>Dry Run</h3>
<pre><code>python cli.py plan examples/content_plan.yaml --dry-run
</code></pre>

<h3>Post to Single Network</h3>
<pre><code>python cli.py post \
  --platform instagram \
  --caption "Launch day! ðŸš€ #MyProduct" \
  --media ./assets/launch.jpg
</code></pre>

<h3>Cross-Post</h3>
<pre><code>python cli.py post \
  --platform instagram facebook linkedin \
  --caption-file examples/post.json \
  --media ./assets/launch.jpg
</code></pre>

<h3>Schedule Plan</h3>
<pre><code>python cli.py schedule examples/content_plan.yaml
python cli.py worker --concurrency 2
</code></pre>

<hr>

<h2>Example Content Plan</h2>
<pre><code>campaign: "August Launch"
defaults:
  utm: "utm_source={platform}&utm_medium=social&utm_campaign=aug-launch"
  hashtags: ["#startups", "#product", "#launch"]
  media_dir: "./assets"
  time_window: { start: "09:00", end: "20:00" }

posts:
  - brief: "Announce launch, focus on benefits for freelancers."
    media: "launch.jpg"
    platforms: ["instagram", "facebook", "linkedin"]
    schedule: "2025-08-20T10:30:00+05:30"
  - brief: "How it works carousel"
    media: ["step1.png", "step2.png", "step3.png"]
    platforms: ["instagram", "linkedin"]
    schedule: "2025-08-22T18:00:00+05:30"
</code></pre>

<hr>

<h2>Publisher Interface</h2>
<pre><code>from abc import ABC, abstractmethod
from typing import List, Optional

class PostResult:
    def __init__(self, success: bool, post_id: Optional[str] = None, error: Optional[str] = None):
        self.success = success
        self.post_id = post_id
        self.error = error

class Publisher(ABC):
    name: str

    @abstractmethod
    def publish(self, caption: str, media_paths: List[str]) -> PostResult: ...

    @abstractmethod
    def analytics(self, post_id: str) -> dict: ...
</code></pre>

<hr>

<h2>CLI Usage</h2>
<pre><code>python cli.py --help
python cli.py post --help
python cli.py schedule --help
python cli.py worker --help
</code></pre>

<hr>

<h2>Docker</h2>
<pre><code>docker build -t socialbee-ai .
docker run --env-file .env -v $(pwd)/assets:/app/assets socialbee-ai python cli.py worker
</code></pre>

<hr>

<h2>Security and Privacy</h2>
<ul>
  <li>Do not commit tokens or secrets</li>
  <li>Use <code>.env</code> or a secrets manager</li>
  <li>Limit scopes to minimum needed</li>
  <li>Avoid logging sensitive data</li>
</ul>

<hr>

<h2>Legal and Platform Policy</h2>
<ul>
  <li>Follow each platformâ€™s Terms of Service</li>
  <li>Some actions require app review and verification</li>
  <li>WhatsApp marketing use requires approved templates</li>
</ul>

<hr>

<h2>Roadmap</h2>
<ul>
  <li>[ ] Team workspaces and roles</li>
  <li>[ ] Canva/Figma import</li>
  <li>[ ] Video posting and auto-captions</li>
  <li>[ ] Best-time-to-post AI model</li>
  <li>[ ] Web dashboard</li>
</ul>

<hr>

<h2>License</h2>
<p>MIT Â© You. See LICENSE</p>
